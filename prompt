Create a python application that will

read articles from https: //hnrss.org/best.jsonfeed (which is a Hacker News list) on daily basis
and save new entires (based on id) it hn.sqlite database.
from the Hacker News jsonfeed it will save below data in separate columns.

* id
* title
* content_html
* url
* extenral_url
* date_published
* author_name
* author_url
* It will also save the date and time of the scraping.

It will extract the URL of the comments from "content_html" field into a separate column
It will extract the number of comments (integer) from "content_html" field into a separate column

Examples of the "content_html" field:

* "content_html": "\n\u003cp\u003eArticle URL: \u003ca href=\"https://bits.debian.org/2023/08/debian-turns-30.html\\"\u003ehttps: //bits.debian.org/2023/08/debian-turns-30.html\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eComments URL: \u003ca href=\"https://news.ycombinator.com/item?id=37160580\\"\u003ehttps://news.ycombinator.com/item?id=37160580\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003ePoints: 295\u003c/p\u003e\n\u003cp\u003e# Comments: 83\u003c/p\u003e\n",
* "content_html": "\n\u003cp\u003eArticle URL: \u003ca href=\"https://foundation.mozilla.org/en/campaigns/sign-our-petition-to-stop-france-from-forcing-browsers-like-mozillas-firefox-to-censor-websites/\\"\u003ehttps: //foundation.mozilla.org/en/campaigns/sign-our-petition-to-stop-france-from-forcing-browsers-like-mozillas-firefox-to-censor-websites/\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eComments URL: \u003ca href=\"https://news.ycombinator.com/item?id=37158710\\"\u003ehttps://news.ycombinator.com/item?id=37158710\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003ePoints: 454\u003c/p\u003e\n\u003cp\u003e# Comments: 210\u003c/p\u003e\n",
* "content_html": "\n\u003cp\u003eArticle URL: \u003ca href=\"https://www.hackingbutlegal.com/naomi-wu-and-the-silence-that-speaks-volumes/\\"\u003ehttps: //www.hackingbutlegal.com/naomi-wu-and-the-silence-that-speaks-volumes/\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eComments URL: \u003ca href=\"https://news.ycombinator.com/item?id=37154414\\"\u003ehttps://news.ycombinator.com/item?id=37154414\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003ePoints: 418\u003c/p\u003e\n\u003cp\u003e# Comments: 18199\u003c/p\u003e\n",

The application will also read the comments from the comments url and save them in a separate "comments_json" column.

It will be contained in a Docker container.
It will have a README.md file with instructions
* how to run code locally
* how to deploy the code on an empty vm with linux and docker installed

Important, start generating from Dockerfile, then README.md file the python code